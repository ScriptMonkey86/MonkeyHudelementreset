--[[
       ___           ___           ___           ___           ___                       ___           ___                   
     /\  \         /\  \         /\  \         /|  |         /\__\                     /\  \         /\  \         _____    
    |::\  \       /::\  \        \:\  \       |:|  |        /:/ _/_         ___        \:\  \        \:\  \       /::\  \   
    |:|:\  \     /:/\:\  \        \:\  \      |:|  |       /:/ /\__\       /|  |        \:\  \        \:\  \     /:/\:\  \  
  __|:|\:\  \   /:/  \:\  \   _____\:\  \   __|:|  |      /:/ /:/ _/_     |:|  |    ___ /::\  \   ___  \:\  \   /:/  \:\__\ 
 /::::|_\:\__\ /:/__/ \:\__\ /::::::::\__\ /\ |:|__|____ /:/_/:/ /\__\    |:|  |   /\  /:/\:\__\ /\  \  \:\__\ /:/__/ \:|__|
 \:\~~\  \/__/ \:\  \ /:/  / \:\~~\~~\/__/ \:\/:::::/__/ \:\/:/ /:/  /  __|:|__|   \:\/:/  \/__/ \:\  \ /:/  / \:\  \ /:/  /
  \:\  \        \:\  /:/  /   \:\  \        \::/~~/~      \::/_/:/  /  /::::\  \    \::/__/       \:\  /:/  /   \:\  /:/  / 
   \:\  \        \:\/:/  /     \:\  \        \:\~~\        \:\/:/  /   ~~~~\:\  \    \:\  \        \:\/:/  /     \:\/:/  /  
    \:\__\        \::/  /       \:\__\        \:\__\        \::/  /         \:\__\    \:\__\        \::/  /       \::/  /   
     \/__/         \/__/         \/__/         \/__/         \/__/           \/__/     \/__/         \/__/         \/__/       
          >By ScriptMonkey86

]]--

do
	local v0 = string.char;
	local v1 = string.byte;
	local v2 = string.sub;
	local v3 = bit32 or bit;
	local v4 = v3.bxor;
	local v5 = table.concat;
	local v6 = table.insert;
	local function v7(v24, v25)
		local v26 = 0;
		local v27;
		while true do
			if (v26 == 1) then
				return v5(v27);
			end
			if (v26 == 0) then
				v27 = {};
				for v43 = 1, #v24 do
					v6(v27, v0(v4(v1(v2(v24, v43, v43 + 1)), v1(v2(v25, 1 + ((v43 - 1) % #v25), 1 + ((v43 - 1) % #v25) + 1))) % 256));
				end
				v26 = 1;
			end
		end
	end
	local v8 = tonumber;
	local v9 = string.byte;
	local v10 = string.char;
	local v11 = string.sub;
	local v12 = string.gsub;
	local v13 = string.rep;
	local v14 = table.concat;
	local v15 = table.insert;
	local v16 = math.ldexp;
	local v17 = getfenv or function()
		return _ENV;
	end;
	local v18 = setmetatable;
	local v19 = pcall;
	local v20 = select;
	local v21 = unpack or table.unpack;
	local v22 = tonumber;
	local function v23(v28, v29, ...)
		local v30 = 0;
		local v31;
		local v32;
		local v33;
		local v34;
		local v35;
		local v36;
		local v37;
		local v38;
		local v39;
		local v40;
		local v41;
		local v42;
		while true do
			if (v30 == 3) then
				function v37()
					local v44 = 0;
					local v45;
					local v46;
					local v47;
					local v48;
					local v49;
					local v50;
					while true do
						if (0 == v44) then
							v45 = v36();
							v46 = v36();
							v44 = 1;
						end
						if (v44 == 1) then
							v47 = 1;
							v48 = (v33(v46, 1, 38 - 18) * (2 ^ 32)) + v45;
							v44 = 2;
						end
						if (v44 == 3) then
							if (v49 == 0) then
								if (v48 == 0) then
									return v50 * 0;
								else
									local v105 = 0;
									local v106;
									while true do
										if (v105 == 0) then
											v106 = 0;
											while true do
												if (0 == v106) then
													v49 = 1;
													v47 = 0;
													break;
												end
											end
											break;
										end
									end
								end
							elseif (v49 == 2047) then
								return ((v48 == 0) and (v50 * ((620 - (555 + 64)) / 0))) or (v50 * NaN);
							end
							return v16(v50, v49 - 1023) * (v47 + (v48 / (2 ^ 52)));
						end
						if (v44 == 2) then
							v49 = v33(v46, 53 - 32, 31);
							v50 = ((v33(v46, 32) == 1) and -1) or 1;
							v44 = 3;
						end
					end
				end
				v38 = nil;
				function v38(v51)
					local v52 = 0;
					local v53;
					local v54;
					while true do
						if (0 == v52) then
							v53 = nil;
							if not v51 then
								local v104 = 0;
								while true do
									if (v104 == 0) then
										v51 = v36();
										if (v51 == 0) then
											return "";
										end
										break;
									end
								end
							end
							v52 = 1;
						end
						if (v52 == 1) then
							v53 = v11(v28, v31, (v31 + v51) - (932 - (857 + 74)));
							v31 = v31 + v51;
							v52 = 2;
						end
						if (v52 == 2) then
							v54 = {};
							for v98 = 1, #v53 do
								v54[v98] = v10(v9(v11(v53, v98, v98)));
							end
							v52 = 3;
						end
						if (v52 == 3) then
							return v14(v54);
						end
					end
				end
				v39 = v36;
				v30 = 4;
			end
			if (v30 == 4) then
				v40 = nil;
				function v40(...)
					return {...}, v20("#", ...);
				end
				v41 = nil;
				function v41()
					local v55 = 0;
					local v56;
					local v57;
					local v58;
					local v59;
					local v60;
					local v61;
					local v62;
					while true do
						if (v55 == 3) then
							v62 = nil;
							while true do
								local v100 = 0;
								while true do
									if (v100 == 0) then
										if (3 == v56) then
											local v110 = 0;
											while true do
												if (v110 == 0) then
													for v124 = 1, v36() do
														v58[v124 - 1] = v41();
													end
													return v60;
												end
											end
										end
										if (v56 == 1) then
											local v111 = 0;
											while true do
												if (v111 == 0) then
													v60 = {v57,v58,nil,v59};
													v61 = v36();
													v111 = 1;
												end
												if (v111 == 1) then
													v62 = {};
													v56 = 2;
													break;
												end
											end
										end
										v100 = 1;
									end
									if (v100 == 1) then
										if (2 == v56) then
											local v112 = 0;
											while true do
												if (v112 == 1) then
													for v126 = 1, v36() do
														local v127 = 0;
														local v128;
														while true do
															if (v127 == 0) then
																v128 = v34();
																if (v33(v128, 1, 1) == 0) then
																	local v152 = 0;
																	local v153;
																	local v154;
																	local v155;
																	local v156;
																	while true do
																		if (v152 == 1) then
																			v155 = nil;
																			v156 = nil;
																			v152 = 2;
																		end
																		if (v152 == 0) then
																			v153 = 0;
																			v154 = nil;
																			v152 = 1;
																		end
																		if (v152 == 2) then
																			while true do
																				if (v153 == 1) then
																					local v162 = 0;
																					while true do
																						if (v162 == 1) then
																							v153 = 2;
																							break;
																						end
																						if (v162 == 0) then
																							v156 = {v35(),v35(),nil,nil};
																							if (v154 == 0) then
																								local v170 = 0;
																								local v171;
																								while true do
																									if (v170 == 0) then
																										v171 = 0;
																										while true do
																											if (v171 == 0) then
																												v156[1640 - (1523 + 114)] = v35();
																												v156[4] = v35();
																												break;
																											end
																										end
																										break;
																									end
																								end
																							elseif (v154 == 1) then
																								v156[3] = v36();
																							elseif (v154 == 2) then
																								v156[3] = v36() - (2 ^ 16);
																							elseif (v154 == 3) then
																								local v180 = 0;
																								local v181;
																								while true do
																									if (v180 == 0) then
																										v181 = 0;
																										while true do
																											if (0 == v181) then
																												v156[3] = v36() - (2 ^ 16);
																												v156[4 + 0] = v35();
																												break;
																											end
																										end
																										break;
																									end
																								end
																							end
																							v162 = 1;
																						end
																					end
																				end
																				if (v153 == 3) then
																					if (v33(v155, 3 - 0, 3) == 1) then
																						v156[4] = v62[v156[4]];
																					end
																					v57[v126] = v156;
																					break;
																				end
																				if (v153 == 0) then
																					local v164 = 0;
																					while true do
																						if (v164 == 1) then
																							v153 = 1;
																							break;
																						end
																						if (0 == v164) then
																							v154 = v33(v128, 2, 3);
																							v155 = v33(v128, 4, 6);
																							v164 = 1;
																						end
																					end
																				end
																				if (v153 == 2) then
																					local v165 = 0;
																					while true do
																						if (v165 == 0) then
																							if (v33(v155, 1, 1) == 1) then
																								v156[2] = v62[v156[2]];
																							end
																							if (v33(v155, 2, 2) == 1) then
																								v156[3] = v62[v156[3]];
																							end
																							v165 = 1;
																						end
																						if (v165 == 1) then
																							v153 = 3;
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
														end
													end
													v56 = 3;
													break;
												end
												if (v112 == 0) then
													for v129 = 1, v61 do
														local v130 = 0;
														local v131;
														local v132;
														while true do
															if (v130 == 1) then
																if (v131 == 1) then
																	v132 = v34() ~= 0;
																elseif (v131 == (929 - (214 + 713))) then
																	v132 = v37();
																elseif (v131 == (1 + 2)) then
																	v132 = v38();
																end
																v62[v129] = v132;
																break;
															end
															if (v130 == 0) then
																v131 = v34();
																v132 = nil;
																v130 = 1;
															end
														end
													end
													v60[1 + 2] = v34();
													v112 = 1;
												end
											end
										end
										if (0 == v56) then
											local v113 = 0;
											while true do
												if (1 == v113) then
													v59 = {};
													v56 = 1;
													break;
												end
												if (v113 == 0) then
													v57 = {};
													v58 = {};
													v113 = 1;
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v55 == 2) then
							v60 = nil;
							v61 = nil;
							v55 = 3;
						end
						if (v55 == 0) then
							v56 = 0;
							v57 = nil;
							v55 = 1;
						end
						if (v55 == 1) then
							v58 = nil;
							v59 = nil;
							v55 = 2;
						end
					end
				end
				v30 = 5;
			end
			if (v30 == 1) then
				function v33(v63, v64, v65)
					if v65 then
						local v87 = 0;
						local v88;
						local v89;
						while true do
							if (v87 == 0) then
								v88 = 0;
								v89 = nil;
								v87 = 1;
							end
							if (1 == v87) then
								while true do
									if (v88 == 0) then
										local v107 = 0;
										while true do
											if (v107 == 0) then
												v89 = (v63 / (2 ^ (v64 - 1))) % (2 ^ (((v65 - (2 - 1)) - (v64 - 1)) + 1));
												return v89 - (v89 % 1);
											end
										end
									end
								end
								break;
							end
						end
					else
						local v90 = 0;
						local v91;
						local v92;
						while true do
							if (v90 == 0) then
								v91 = 0;
								v92 = nil;
								v90 = 1;
							end
							if (v90 == 1) then
								while true do
									if (v91 == 0) then
										local v108 = 0;
										while true do
											if (v108 == 0) then
												v92 = 2 ^ (v64 - 1);
												return (((v63 % (v92 + v92)) >= v92) and 1) or 0;
											end
										end
									end
								end
								break;
							end
						end
					end
				end
				v34 = nil;
				function v34()
					local v66 = 0;
					local v67;
					while true do
						if (v66 == 1) then
							return v67;
						end
						if (v66 == 0) then
							v67 = v9(v28, v31, v31);
							v31 = v31 + 1;
							v66 = 1;
						end
					end
				end
				v35 = nil;
				v30 = 2;
			end
			if (v30 == 5) then
				v42 = nil;
				function v42(v68, v69, v70)
					local v71 = 0;
					local v72;
					local v73;
					local v74;
					local v75;
					while true do
						if (v71 == 0) then
							v72 = 0;
							v73 = nil;
							v71 = 1;
						end
						if (v71 == 1) then
							v74 = nil;
							v75 = nil;
							v71 = 2;
						end
						if (2 == v71) then
							while true do
								local v101 = 0;
								while true do
									if (v101 == 0) then
										if (v72 == 0) then
											local v114 = 0;
											while true do
												if (v114 == 1) then
													v72 = 1;
													break;
												end
												if (v114 == 0) then
													v73 = v68[1066 - (68 + 997)];
													v74 = v68[2];
													v114 = 1;
												end
											end
										end
										if (v72 == 1) then
											local v115 = 0;
											while true do
												if (0 == v115) then
													v75 = v68[3];
													return function(...)
														local v133 = 0;
														local v134;
														local v135;
														local v136;
														local v137;
														local v138;
														local v139;
														local v140;
														local v141;
														local v142;
														local v143;
														local v144;
														local v145;
														local v146;
														local v147;
														while true do
															if (v133 == 0) then
																v134 = v73;
																v135 = v74;
																v136 = v75;
																v137 = v40;
																v133 = 1;
															end
															if (v133 == 3) then
																v145 = (v142 - v136) + 1;
																v146 = nil;
																v147 = nil;
																while true do
																	local v149 = 0;
																	local v150;
																	while true do
																		if (v149 == 0) then
																			v150 = 0;
																			while true do
																				if (1 == v150) then
																					if (v147 <= 63) then
																						if (v147 <= 31) then
																							if (v147 <= 15) then
																								if (v147 <= 7) then
																									if (v147 <= 3) then
																										if (v147 <= 1) then
																											if (v147 > (0 - 0)) then
																												v144[v146[2]] = v144[v146[3]] * v144[v146[4]];
																											else
																												local v183 = 0;
																												local v184;
																												local v185;
																												local v186;
																												while true do
																													if (v183 == 1) then
																														v186 = v144[v184 + (119 - (32 + 85))];
																														if (v186 > 0) then
																															if (v185 > v144[v184 + 1]) then
																																v138 = v146[3];
																															else
																																v144[v184 + 3] = v185;
																															end
																														elseif (v185 < v144[v184 + 1]) then
																															v138 = v146[3];
																														else
																															v144[v184 + 3] = v185;
																														end
																														break;
																													end
																													if (0 == v183) then
																														v184 = v146[2];
																														v185 = v144[v184];
																														v183 = 1;
																													end
																												end
																											end
																										elseif (v147 > 2) then
																											if (v144[v146[2]] <= v144[v146[4]]) then
																												v138 = v138 + 1;
																											else
																												v138 = v146[3];
																											end
																										else
																											v144[v146[2 + 0]] = v42(v135[v146[3]], nil, v70);
																										end
																									elseif (v147 <= 5) then
																										if (v147 == 4) then
																											v144[v146[2]] = v144[v146[3]] % v144[v146[1 + 3]];
																										elseif (v144[v146[2]] ~= v146[4]) then
																											v138 = v138 + (958 - (892 + 65));
																										else
																											v138 = v146[3];
																										end
																									elseif (v147 > 6) then
																										local v189 = 0;
																										local v190;
																										local v191;
																										local v192;
																										local v193;
																										local v194;
																										while true do
																											if (v189 == 2) then
																												v194 = nil;
																												while true do
																													if (v190 == 0) then
																														local v514 = 0;
																														while true do
																															if (v514 == 0) then
																																v191 = v146[4 - 2];
																																v192, v193 = v137(v144[v191](v144[v191 + 1]));
																																v514 = 1;
																															end
																															if (1 == v514) then
																																v190 = 1;
																																break;
																															end
																														end
																													end
																													if (v190 == 1) then
																														local v515 = 0;
																														while true do
																															if (v515 == 0) then
																																v139 = (v193 + v191) - 1;
																																v194 = 0;
																																v515 = 1;
																															end
																															if (v515 == 1) then
																																v190 = 2;
																																break;
																															end
																														end
																													end
																													if (v190 == 2) then
																														for v557 = v191, v139 do
																															local v558 = 0;
																															local v559;
																															while true do
																																if (v558 == 0) then
																																	v559 = 0;
																																	while true do
																																		if (v559 == 0) then
																																			v194 = v194 + 1;
																																			v144[v557] = v192[v194];
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																												end
																												break;
																											end
																											if (v189 == 1) then
																												v192 = nil;
																												v193 = nil;
																												v189 = 2;
																											end
																											if (v189 == 0) then
																												v190 = 0;
																												v191 = nil;
																												v189 = 1;
																											end
																										end
																									else
																										v144[v146[2]] = v146[3] ^ v144[v146[4]];
																									end
																								elseif (v147 <= 11) then
																									if (v147 <= 9) then
																										if (v147 > 8) then
																											local v196 = 0;
																											local v197;
																											local v198;
																											while true do
																												if (1 == v196) then
																													while true do
																														if (v197 == 0) then
																															v198 = v146[2];
																															do
																																return v21(v144, v198, v198 + v146[3]);
																															end
																															break;
																														end
																													end
																													break;
																												end
																												if (0 == v196) then
																													v197 = 0;
																													v198 = nil;
																													v196 = 1;
																												end
																											end
																										else
																											v144[v146[2]] = v146[3] ~= (0 - 0);
																										end
																									elseif (v147 == 10) then
																										local v200 = 0;
																										local v201;
																										local v202;
																										local v203;
																										local v204;
																										while true do
																											if (v200 == 2) then
																												while true do
																													if (v201 == 2) then
																														for v560 = 1, v146[4] do
																															local v561 = 0;
																															local v562;
																															local v563;
																															while true do
																																if (v561 == 1) then
																																	while true do
																																		if (v562 == 1) then
																																			if (v563[1] == 33) then
																																				v204[v560 - 1] = {v144,v563[3]};
																																			else
																																				v204[v560 - 1] = {v69,v563[3]};
																																			end
																																			v143[#v143 + 1] = v204;
																																			break;
																																		end
																																		if (0 == v562) then
																																			local v656 = 0;
																																			while true do
																																				if (1 == v656) then
																																					v562 = 1;
																																					break;
																																				end
																																				if (0 == v656) then
																																					v138 = v138 + 1;
																																					v563 = v134[v138];
																																					v656 = 1;
																																				end
																																			end
																																		end
																																	end
																																	break;
																																end
																																if (v561 == 0) then
																																	v562 = 0;
																																	v563 = nil;
																																	v561 = 1;
																																end
																															end
																														end
																														v144[v146[2 + 0]] = v42(v202, v203, v70);
																														break;
																													end
																													if (v201 == 0) then
																														local v518 = 0;
																														while true do
																															if (v518 == 1) then
																																v201 = 1;
																																break;
																															end
																															if (v518 == 0) then
																																v202 = v135[v146[3]];
																																v203 = nil;
																																v518 = 1;
																															end
																														end
																													end
																													if (v201 == 1) then
																														local v519 = 0;
																														while true do
																															if (0 == v519) then
																																v204 = {};
																																v203 = v18({}, {[v7("\182\186\187\61\15\77\86", "\233\229\210\83\107\40\46")]=function(v620, v621)
																																	local v622 = 0;
																																	local v623;
																																	while true do
																																		if (v622 == 0) then
																																			v623 = v204[v621];
																																			return v623[1 - 0][v623[2]];
																																		end
																																	end
																																end,[v7("\58\254\76\55\193\12\207\70\55\206", "\101\161\34\82\182")]=function(v624, v625, v626)
																																	local v627 = 0;
																																	local v628;
																																	while true do
																																		if (v627 == 0) then
																																			v628 = v204[v625];
																																			v628[1][v628[2]] = v626;
																																			break;
																																		end
																																	end
																																end});
																																v519 = 1;
																															end
																															if (1 == v519) then
																																v201 = 2;
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v200 == 0) then
																												v201 = 0;
																												v202 = nil;
																												v200 = 1;
																											end
																											if (v200 == 1) then
																												v203 = nil;
																												v204 = nil;
																												v200 = 2;
																											end
																										end
																									else
																										v144[v146[2]] = v146[3] + v144[v146[9 - 5]];
																									end
																								elseif (v147 <= 13) then
																									if (v147 == 12) then
																										local v206 = 0;
																										local v207;
																										local v208;
																										local v209;
																										local v210;
																										local v211;
																										while true do
																											if (v206 == 1) then
																												v209 = nil;
																												v210 = nil;
																												v206 = 2;
																											end
																											if (v206 == 2) then
																												v211 = nil;
																												while true do
																													if (v207 == 2) then
																														for v564 = v208, v139 do
																															local v565 = 0;
																															local v566;
																															while true do
																																if (v565 == 0) then
																																	v566 = 0;
																																	while true do
																																		if (v566 == 0) then
																																			v211 = v211 + 1;
																																			v144[v564] = v209[v211];
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v207 == 1) then
																														local v520 = 0;
																														while true do
																															if (0 == v520) then
																																v139 = (v210 + v208) - 1;
																																v211 = 0;
																																v520 = 1;
																															end
																															if (v520 == 1) then
																																v207 = 2;
																																break;
																															end
																														end
																													end
																													if (v207 == 0) then
																														local v521 = 0;
																														while true do
																															if (v521 == 0) then
																																v208 = v146[2];
																																v209, v210 = v137(v144[v208](v21(v144, v208 + 1, v139)));
																																v521 = 1;
																															end
																															if (1 == v521) then
																																v207 = 1;
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (v206 == 0) then
																												v207 = 0;
																												v208 = nil;
																												v206 = 1;
																											end
																										end
																									else
																										local v212 = 0;
																										local v213;
																										local v214;
																										while true do
																											if (v212 == 1) then
																												while true do
																													if (v213 == 0) then
																														v214 = v146[2];
																														do
																															return v144[v214](v21(v144, v214 + 1, v146[3]));
																														end
																														break;
																													end
																												end
																												break;
																											end
																											if (v212 == 0) then
																												v213 = 0;
																												v214 = nil;
																												v212 = 1;
																											end
																										end
																									end
																								elseif (v147 == (11 + 3)) then
																									v144[v146[2]] = v144[v146[3]] + v144[v146[4]];
																								else
																									local v216 = 0;
																									local v217;
																									local v218;
																									while true do
																										if (v216 == 1) then
																											for v475 = v217 + 1, v146[3] do
																												v15(v218, v144[v475]);
																											end
																											break;
																										end
																										if (v216 == 0) then
																											v217 = v146[7 - 5];
																											v218 = v144[v217];
																											v216 = 1;
																										end
																									end
																								end
																							elseif (v147 <= 23) then
																								if (v147 <= 19) then
																									if (v147 <= 17) then
																										if (v147 > 16) then
																											v144[v146[954 - (802 + 150)]] = v144[v146[3]] + v144[v146[4]];
																										elseif (v146[2] < v144[v146[4]]) then
																											v138 = v138 + 1;
																										else
																											v138 = v146[3];
																										end
																									elseif (v147 == (48 - 30)) then
																										local v220 = 0;
																										local v221;
																										local v222;
																										local v223;
																										local v224;
																										while true do
																											if (v220 == 2) then
																												while true do
																													if (v221 == 1) then
																														local v523 = 0;
																														while true do
																															if (1 == v523) then
																																v221 = 2;
																																break;
																															end
																															if (v523 == 0) then
																																v224 = v144[v222] + v223;
																																v144[v222] = v224;
																																v523 = 1;
																															end
																														end
																													end
																													if (v221 == 2) then
																														if (v223 > 0) then
																															if (v224 <= v144[v222 + 1]) then
																																local v629 = 0;
																																while true do
																																	if (v629 == 0) then
																																		v138 = v146[3];
																																		v144[v222 + 3] = v224;
																																		break;
																																	end
																																end
																															end
																														elseif (v224 >= v144[v222 + 1]) then
																															local v630 = 0;
																															local v631;
																															while true do
																																if (v630 == 0) then
																																	v631 = 0;
																																	while true do
																																		if (v631 == 0) then
																																			v138 = v146[3];
																																			v144[v222 + 3] = v224;
																																			break;
																																		end
																																	end
																																	break;
																																end
																															end
																														end
																														break;
																													end
																													if (v221 == 0) then
																														local v524 = 0;
																														while true do
																															if (v524 == 1) then
																																v221 = 1;
																																break;
																															end
																															if (0 == v524) then
																																v222 = v146[3 - 1];
																																v223 = v144[v222 + 2];
																																v524 = 1;
																															end
																														end
																													end
																												end
																												break;
																											end
																											if (1 == v220) then
																												v223 = nil;
																												v224 = nil;
																												v220 = 2;
																											end
																											if (0 == v220) then
																												v221 = 0;
																												v222 = nil;
																												v220 = 1;
																											end
																										end
																									elseif (v144[v146[2]] <= v146[4]) then
																										v138 = v138 + 1;
																									else
																										v138 = v146[3];
																									end
																								elseif (v147 <= 21) then
																									if (v147 > 20) then
																										for v415 = v146[2], v146[3] do
																											v144[v415] = nil;
																										end
																									else
																										v138 = v146[3 + 0];
																									end
																								elseif (v147 == 22) then
																									v69[v146[3]] = v144[v146[2]];
																								else
																									local v228 = 0;
																									local v229;
																									local v230;
																									local v231;
																									while true do
																										if (v228 == 1) then
																											v231 = v146[3];
																											for v476 = 1, v231 do
																												v230[v476] = v144[v229 + v476];
																											end
																											break;
																										end
																										if (0 == v228) then
																											v229 = v146[2];
																											v230 = v144[v229];
																											v228 = 1;
																										end
																									end
																								end
																							elseif (v147 <= (1024 - (915 + 82))) then
																								if (v147 <= 25) then
																									if (v147 == 24) then
																										local v232 = 0;
																										local v233;
																										local v234;
																										local v235;
																										local v236;
																										while true do
																											if (v232 == 1) then
																												v139 = (v235 + v233) - 1;
																												v236 = 0;
																												v232 = 2;
																											end
																											if (v232 == 2) then
																												for v479 = v233, v139 do
																													local v480 = 0;
																													local v481;
																													while true do
																														if (0 == v480) then
																															v481 = 0;
																															while true do
																																if (v481 == 0) then
																																	v236 = v236 + 1;
																																	v144[v479] = v234[v236];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (0 == v232) then
																												v233 = v146[5 - 3];
																												v234, v235 = v137(v144[v233](v144[v233 + 1]));
																												v232 = 1;
																											end
																										end
																									elseif (v144[v146[2]] ~= v146[4]) then
																										v138 = v138 + 1;
																									else
																										v138 = v146[3];
																									end
																								elseif (v147 > 26) then
																									local v237 = 0;
																									local v238;
																									local v239;
																									local v240;
																									local v241;
																									while true do
																										if (2 == v237) then
																											while true do
																												if (1 == v238) then
																													v241 = v146[3];
																													for v567 = 1, v241 do
																														v240[v567] = v144[v239 + v567];
																													end
																													break;
																												end
																												if (v238 == 0) then
																													local v526 = 0;
																													while true do
																														if (v526 == 1) then
																															v238 = 1;
																															break;
																														end
																														if (v526 == 0) then
																															v239 = v146[2 + 0];
																															v240 = v144[v239];
																															v526 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (v237 == 1) then
																											v240 = nil;
																											v241 = nil;
																											v237 = 2;
																										end
																										if (v237 == 0) then
																											v238 = 0;
																											v239 = nil;
																											v237 = 1;
																										end
																									end
																								else
																									v144[v146[2]] = v146[3] / v146[4];
																								end
																							elseif (v147 <= (37 - 8)) then
																								if (v147 == 28) then
																									do
																										return v144[v146[2]];
																									end
																								else
																									v144[v146[2]] = v144[v146[3]];
																								end
																							elseif (v147 > 30) then
																								if (v144[v146[2]] <= v144[v146[4]]) then
																									v138 = v138 + 1;
																								else
																									v138 = v146[3];
																								end
																							else
																								local v245 = 0;
																								local v246;
																								local v247;
																								local v248;
																								while true do
																									if (v245 == 2) then
																										for v482 = 1, v146[4] do
																											local v483 = 0;
																											local v484;
																											while true do
																												if (0 == v483) then
																													v138 = v138 + 1;
																													v484 = v134[v138];
																													v483 = 1;
																												end
																												if (v483 == 1) then
																													if (v484[1] == 33) then
																														v248[v482 - 1] = {v144,v484[3]};
																													else
																														v248[v482 - 1] = {v69,v484[3]};
																													end
																													v143[#v143 + 1] = v248;
																													break;
																												end
																											end
																										end
																										v144[v146[2]] = v42(v246, v247, v70);
																										break;
																									end
																									if (v245 == 1) then
																										v248 = {};
																										v247 = v18({}, {[v7("\17\215\4\87\250\222\250", "\78\136\109\57\158\187\130\226")]=function(v485, v486)
																											local v487 = 0;
																											local v488;
																											local v489;
																											while true do
																												if (v487 == 0) then
																													v488 = 0;
																													v489 = nil;
																													v487 = 1;
																												end
																												if (v487 == 1) then
																													while true do
																														if (v488 == 0) then
																															local v634 = 0;
																															while true do
																																if (v634 == 0) then
																																	v489 = v248[v486];
																																	return v489[1][v489[2]];
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end,[v7("\206\1\49\252\230\55\49\253\244\38", "\145\94\95\153")]=function(v490, v491, v492)
																											local v493 = 0;
																											local v494;
																											local v495;
																											while true do
																												if (v493 == 1) then
																													while true do
																														if (v494 == 0) then
																															v495 = v248[v491];
																															v495[1][v495[2]] = v492;
																															break;
																														end
																													end
																													break;
																												end
																												if (0 == v493) then
																													v494 = 0;
																													v495 = nil;
																													v493 = 1;
																												end
																											end
																										end});
																										v245 = 2;
																									end
																									if (v245 == 0) then
																										v246 = v135[v146[3]];
																										v247 = nil;
																										v245 = 1;
																									end
																								end
																							end
																						elseif (v147 <= 47) then
																							if (v147 <= 39) then
																								if (v147 <= 35) then
																									if (v147 <= 33) then
																										if (v147 == 32) then
																											local v249 = 0;
																											local v250;
																											local v251;
																											while true do
																												if (v249 == 0) then
																													v250 = 0;
																													v251 = nil;
																													v249 = 1;
																												end
																												if (v249 == 1) then
																													while true do
																														if (v250 == 0) then
																															v251 = v146[2];
																															v144[v251] = v144[v251](v144[v251 + (2 - 1)]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											v144[v146[2]] = v144[v146[3]];
																										end
																									elseif (v147 == 34) then
																										local v254 = 0;
																										local v255;
																										local v256;
																										local v257;
																										while true do
																											if (v254 == 0) then
																												v255 = v146[2];
																												v256 = {v144[v255](v21(v144, v255 + 1, v146[3]))};
																												v254 = 1;
																											end
																											if (v254 == 1) then
																												v257 = 0;
																												for v496 = v255, v146[4] do
																													local v497 = 0;
																													local v498;
																													while true do
																														if (v497 == 0) then
																															v498 = 0;
																															while true do
																																if (v498 == 0) then
																																	v257 = v257 + 1;
																																	v144[v496] = v256[v257];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									else
																										local v258 = 0;
																										local v259;
																										local v260;
																										local v261;
																										while true do
																											if (v258 == 1) then
																												v261 = v144[v259 + 2];
																												if (v261 > 0) then
																													if (v260 > v144[v259 + (1 - 0)]) then
																														v138 = v146[3];
																													else
																														v144[v259 + 3] = v260;
																													end
																												elseif (v260 < v144[v259 + 1]) then
																													v138 = v146[3];
																												else
																													v144[v259 + 3] = v260;
																												end
																												break;
																											end
																											if (v258 == 0) then
																												v259 = v146[2];
																												v260 = v144[v259];
																												v258 = 1;
																											end
																										end
																									end
																								elseif (v147 <= 37) then
																									if (v147 == 36) then
																										local v262 = 0;
																										local v263;
																										local v264;
																										while true do
																											if (v262 == 0) then
																												v263 = 0;
																												v264 = nil;
																												v262 = 1;
																											end
																											if (v262 == 1) then
																												while true do
																													if (v263 == 0) then
																														v264 = v146[2];
																														v144[v264] = v144[v264](v21(v144, v264 + 1, v139));
																														break;
																													end
																												end
																												break;
																											end
																										end
																									else
																										local v265 = 0;
																										local v266;
																										local v267;
																										while true do
																											if (v265 == 0) then
																												v266 = 0;
																												v267 = nil;
																												v265 = 1;
																											end
																											if (v265 == 1) then
																												while true do
																													if (v266 == 0) then
																														v267 = v146[2];
																														v144[v267] = v144[v267](v21(v144, v267 + 1 + 0, v146[3]));
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v147 > 38) then
																									local v268 = 0;
																									local v269;
																									while true do
																										if (v268 == 0) then
																											v269 = v146[3 - 1];
																											v144[v269](v21(v144, v269 + 1, v139));
																											break;
																										end
																									end
																								else
																									v144[v146[2]] = v69[v146[3]];
																								end
																							elseif (v147 <= (43 + 0)) then
																								if (v147 <= 41) then
																									if (v147 > 40) then
																										local v272 = 0;
																										local v273;
																										while true do
																											if (v272 == 0) then
																												v273 = v146[2];
																												do
																													return v21(v144, v273, v139);
																												end
																												break;
																											end
																										end
																									else
																										do
																											return;
																										end
																									end
																								elseif (v147 > 42) then
																									local v274 = 0;
																									local v275;
																									local v276;
																									while true do
																										if (v274 == 0) then
																											v275 = 0;
																											v276 = nil;
																											v274 = 1;
																										end
																										if (v274 == 1) then
																											while true do
																												if (0 == v275) then
																													v276 = v146[2];
																													v144[v276] = v144[v276](v21(v144, v276 + (792 - (368 + 423)), v139));
																													break;
																												end
																											end
																											break;
																										end
																									end
																								else
																									v144[v146[2]] = v144[v146[3]] * v146[4];
																								end
																							elseif (v147 <= 45) then
																								if (v147 == (138 - 94)) then
																									v144[v146[2]] = v146[3] ^ v144[v146[4]];
																								else
																									v144[v146[20 - (10 + 8)]] = v144[v146[3]] * v146[4];
																								end
																							elseif (v147 == 46) then
																								v144[v146[2]] = v146[3] / v146[4];
																							else
																								local v281 = 0;
																								local v282;
																								local v283;
																								local v284;
																								local v285;
																								local v286;
																								while true do
																									if (v281 == 1) then
																										v284 = nil;
																										v285 = nil;
																										v281 = 2;
																									end
																									if (v281 == 2) then
																										v286 = nil;
																										while true do
																											if (v282 == 2) then
																												for v576 = v283, v139 do
																													local v577 = 0;
																													while true do
																														if (v577 == 0) then
																															v286 = v286 + (443 - (416 + 26));
																															v144[v576] = v284[v286];
																															break;
																														end
																													end
																												end
																												break;
																											end
																											if (v282 == 0) then
																												local v535 = 0;
																												while true do
																													if (v535 == 1) then
																														v282 = 1;
																														break;
																													end
																													if (v535 == 0) then
																														v283 = v146[2];
																														v284, v285 = v137(v144[v283](v21(v144, v283 + (3 - 2), v146[3])));
																														v535 = 1;
																													end
																												end
																											end
																											if (1 == v282) then
																												local v536 = 0;
																												while true do
																													if (v536 == 1) then
																														v282 = 2;
																														break;
																													end
																													if (0 == v536) then
																														v139 = (v285 + v283) - 1;
																														v286 = 0;
																														v536 = 1;
																													end
																												end
																											end
																										end
																										break;
																									end
																									if (v281 == 0) then
																										v282 = 0;
																										v283 = nil;
																										v281 = 1;
																									end
																								end
																							end
																						elseif (v147 <= 55) then
																							if (v147 <= 51) then
																								if (v147 <= 49) then
																									if (v147 == (153 - 105)) then
																										v144[v146[2]] = #v144[v146[3]];
																									else
																										local v288 = 0;
																										local v289;
																										while true do
																											if (v288 == 0) then
																												v289 = v146[2];
																												v144[v289](v144[v289 + 1]);
																												break;
																											end
																										end
																									end
																								elseif (v147 > 50) then
																									v144[v146[2]][v144[v146[3]]] = v146[2 + 2];
																								elseif (v144[v146[2]] == v144[v146[4]]) then
																									v138 = v138 + 1;
																								else
																									v138 = v146[4 - 1];
																								end
																							elseif (v147 <= 53) then
																								if (v147 > 52) then
																									v144[v146[2]] = v144[v146[3]] / v144[v146[4]];
																								else
																									v144[v146[2]][v144[v146[3]]] = v144[v146[4]];
																								end
																							elseif (v147 > (492 - (145 + 293))) then
																								local v295 = 0;
																								local v296;
																								local v297;
																								local v298;
																								while true do
																									if (v295 == 0) then
																										v296 = 0;
																										v297 = nil;
																										v295 = 1;
																									end
																									if (v295 == 1) then
																										v298 = nil;
																										while true do
																											if (v296 == 0) then
																												local v537 = 0;
																												while true do
																													if (v537 == 1) then
																														v296 = 1;
																														break;
																													end
																													if (v537 == 0) then
																														v297 = v146[2];
																														v298 = v144[v297];
																														v537 = 1;
																													end
																												end
																											end
																											if (v296 == 1) then
																												for v578 = v297 + 1, v139 do
																													v15(v298, v144[v578]);
																												end
																												break;
																											end
																										end
																										break;
																									end
																								end
																							else
																								for v417 = v146[432 - (44 + 386)], v146[3] do
																									v144[v417] = nil;
																								end
																							end
																						elseif (v147 <= 59) then
																							if (v147 <= (1543 - (998 + 488))) then
																								if (v147 == 56) then
																									v144[v146[2]] = v42(v135[v146[1 + 2]], nil, v70);
																								else
																									v144[v146[2]] = v144[v146[3 + 0]] % v146[4];
																								end
																							elseif (v147 > 58) then
																								v144[v146[2]] = v146[3] + v144[v146[4]];
																							else
																								v144[v146[2]] = v69[v146[3]];
																							end
																						elseif (v147 <= 61) then
																							if (v147 == 60) then
																								local v304 = 0;
																								local v305;
																								local v306;
																								local v307;
																								while true do
																									if (0 == v304) then
																										v305 = v146[2];
																										v306 = v144[v305 + 2];
																										v304 = 1;
																									end
																									if (2 == v304) then
																										if (v306 > 0) then
																											if (v307 <= v144[v305 + 1]) then
																												local v579 = 0;
																												local v580;
																												while true do
																													if (v579 == 0) then
																														v580 = 0;
																														while true do
																															if (v580 == 0) then
																																v138 = v146[3];
																																v144[v305 + 3] = v307;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																										elseif (v307 >= v144[v305 + 1]) then
																											local v581 = 0;
																											local v582;
																											while true do
																												if (v581 == 0) then
																													v582 = 0;
																													while true do
																														if (v582 == 0) then
																															v138 = v146[3];
																															v144[v305 + 3] = v307;
																															break;
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (v304 == 1) then
																										v307 = v144[v305] + v306;
																										v144[v305] = v307;
																										v304 = 2;
																									end
																								end
																							elseif not v144[v146[2]] then
																								v138 = v138 + 1;
																							else
																								v138 = v146[3];
																							end
																						elseif (v147 == 62) then
																							v144[v146[2]] = v144[v146[3]] - v146[4];
																						else
																							v144[v146[2]][v146[3]] = v144[v146[4]];
																						end
																					elseif (v147 <= 95) then
																						if (v147 <= 79) then
																							if (v147 <= 71) then
																								if (v147 <= 67) then
																									if (v147 <= 65) then
																										if (v147 > 64) then
																											local v311 = 0;
																											local v312;
																											local v313;
																											while true do
																												if (v311 == 1) then
																													while true do
																														if (v312 == 0) then
																															v313 = v146[2];
																															do
																																return v144[v313](v21(v144, v313 + 1, v139));
																															end
																															break;
																														end
																													end
																													break;
																												end
																												if (v311 == 0) then
																													v312 = 0;
																													v313 = nil;
																													v311 = 1;
																												end
																											end
																										else
																											v144[v146[2]][v144[v146[3]]] = v144[v146[4]];
																										end
																									elseif (v147 == 66) then
																										v144[v146[2]] = v144[v146[3]] + v146[4];
																									else
																										local v317 = 0;
																										local v318;
																										local v319;
																										while true do
																											if (v317 == 0) then
																												v318 = 0;
																												v319 = nil;
																												v317 = 1;
																											end
																											if (v317 == 1) then
																												while true do
																													if (0 == v318) then
																														v319 = v146[2];
																														v144[v319] = v144[v319](v21(v144, v319 + 1, v146[3]));
																														break;
																													end
																												end
																												break;
																											end
																										end
																									end
																								elseif (v147 <= 69) then
																									if (v147 == 68) then
																										local v320 = 0;
																										local v321;
																										local v322;
																										while true do
																											if (v320 == 1) then
																												while true do
																													if (v321 == 0) then
																														v322 = v146[2];
																														v144[v322](v144[v322 + (773 - (201 + 571))]);
																														break;
																													end
																												end
																												break;
																											end
																											if (0 == v320) then
																												v321 = 0;
																												v322 = nil;
																												v320 = 1;
																											end
																										end
																									else
																										v144[v146[2]] = v144[v146[3]][v146[4]];
																									end
																								elseif (v147 > 70) then
																									v144[v146[1140 - (116 + 1022)]] = v144[v146[3]] / v146[4];
																								else
																									v144[v146[2]] = v70[v146[12 - 9]];
																								end
																							elseif (v147 <= (45 + 30)) then
																								if (v147 <= 73) then
																									if (v147 > 72) then
																										local v328 = 0;
																										local v329;
																										while true do
																											if (v328 == 0) then
																												v329 = v146[2];
																												do
																													return v21(v144, v329, v139);
																												end
																												break;
																											end
																										end
																									else
																										v144[v146[2]] = v144[v146[10 - 7]][v144[v146[4]]];
																									end
																								elseif (v147 == 74) then
																									v144[v146[2]] = v146[3];
																								else
																									v144[v146[2]] = v70[v146[3]];
																								end
																							elseif (v147 <= 77) then
																								if (v147 == 76) then
																									local v336 = 0;
																									local v337;
																									local v338;
																									while true do
																										if (v336 == 1) then
																											while true do
																												if (0 == v337) then
																													v338 = v146[2];
																													v144[v338](v21(v144, v338 + 1, v139));
																													break;
																												end
																											end
																											break;
																										end
																										if (0 == v336) then
																											v337 = 0;
																											v338 = nil;
																											v336 = 1;
																										end
																									end
																								elseif (v146[2] ~= v144[v146[4]]) then
																									v138 = v138 + 1;
																								else
																									v138 = v146[10 - 7];
																								end
																							elseif (v147 > 78) then
																								v144[v146[2]] = v144[v146[3]] - v144[v146[863 - (814 + 45)]];
																							else
																								local v340 = 0;
																								local v341;
																								local v342;
																								local v343;
																								local v344;
																								while true do
																									if (v340 == 2) then
																										for v499 = v341, v139 do
																											local v500 = 0;
																											while true do
																												if (v500 == 0) then
																													v344 = v344 + 1;
																													v144[v499] = v342[v344];
																													break;
																												end
																											end
																										end
																										break;
																									end
																									if (v340 == 0) then
																										v341 = v146[2];
																										v342, v343 = v137(v144[v341](v21(v144, v341 + 1, v139)));
																										v340 = 1;
																									end
																									if (v340 == 1) then
																										v139 = (v343 + v341) - 1;
																										v344 = 0;
																										v340 = 2;
																									end
																								end
																							end
																						elseif (v147 <= (214 - 127)) then
																							if (v147 <= 83) then
																								if (v147 <= 81) then
																									if (v147 == 80) then
																										v144[v146[1 + 1]] = v146[3];
																									elseif (v146[2] ~= v144[v146[4]]) then
																										v138 = v138 + 1 + 0;
																									else
																										v138 = v146[3];
																									end
																								elseif (v147 > 82) then
																									local v347 = 0;
																									local v348;
																									local v349;
																									local v350;
																									while true do
																										if (v347 == 0) then
																											v348 = v146[887 - (261 + 624)];
																											v349 = {v144[v348](v21(v144, v348 + 1, v146[3]))};
																											v347 = 1;
																										end
																										if (v347 == 1) then
																											v350 = 0;
																											for v501 = v348, v146[4] do
																												local v502 = 0;
																												local v503;
																												while true do
																													if (v502 == 0) then
																														v503 = 0;
																														while true do
																															if (v503 == 0) then
																																v350 = v350 + (1081 - (1020 + 60));
																																v144[v501] = v349[v350];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									do
																										return v144[v146[2]];
																									end
																								end
																							elseif (v147 <= 85) then
																								if (v147 == 84) then
																									if (v146[2] == v144[v146[1427 - (630 + 793)]]) then
																										v138 = v138 + 1;
																									else
																										v138 = v146[3];
																									end
																								else
																									v144[v146[2]] = v144[v146[3]] / v144[v146[4]];
																								end
																							elseif (v147 > 86) then
																								if (v144[v146[2]] <= v146[4]) then
																									v138 = v138 + 1;
																								else
																									v138 = v146[3];
																								end
																							else
																								v144[v146[2]] = #v144[v146[3]];
																							end
																						elseif (v147 <= (308 - 217)) then
																							if (v147 <= 89) then
																								if (v147 == 88) then
																									local v353 = 0;
																									while true do
																										if (v353 == 0) then
																											v144[v146[2]] = v146[3] ~= (0 - 0);
																											v138 = v138 + 1;
																											break;
																										end
																									end
																								else
																									local v354 = 0;
																									local v355;
																									while true do
																										if (v354 == 0) then
																											v355 = v144[v146[4]];
																											if not v355 then
																												v138 = v138 + 1;
																											else
																												local v512 = 0;
																												local v513;
																												while true do
																													if (0 == v512) then
																														v513 = 0;
																														while true do
																															if (v513 == 0) then
																																v144[v146[2]] = v355;
																																v138 = v146[3];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								end
																							elseif (v147 > 90) then
																								local v356 = 0;
																								local v357;
																								local v358;
																								while true do
																									if (v356 == 1) then
																										while true do
																											if (v357 == 0) then
																												local v543 = 0;
																												while true do
																													if (v543 == 0) then
																														v358 = v146[2];
																														v139 = (v358 + v145) - (1 + 0);
																														v543 = 1;
																													end
																													if (1 == v543) then
																														v357 = 1;
																														break;
																													end
																												end
																											end
																											if (1 == v357) then
																												for v585 = v358, v139 do
																													local v586 = 0;
																													local v587;
																													local v588;
																													while true do
																														if (v586 == 0) then
																															v587 = 0;
																															v588 = nil;
																															v586 = 1;
																														end
																														if (v586 == 1) then
																															while true do
																																if (v587 == 0) then
																																	v588 = v140[v585 - v358];
																																	v144[v585] = v588;
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (v356 == 0) then
																										v357 = 0;
																										v358 = nil;
																										v356 = 1;
																									end
																								end
																							elseif (v144[v146[6 - 4]] == v146[4]) then
																								v138 = v138 + 1;
																							else
																								v138 = v146[3];
																							end
																						elseif (v147 <= 93) then
																							if (v147 > 92) then
																								local v359 = 0;
																								while true do
																									if (v359 == 0) then
																										v144[v146[2]] = v146[3] ~= 0;
																										v138 = v138 + (1748 - (760 + 987));
																										break;
																									end
																								end
																							else
																								v144[v146[2]] = {};
																							end
																						elseif (v147 == 94) then
																							local v361 = 0;
																							local v362;
																							while true do
																								if (v361 == 0) then
																									v362 = v146[2];
																									v144[v362] = v144[v362]();
																									break;
																								end
																							end
																						else
																							v144[v146[2]] = v144[v146[3]] - v146[4];
																						end
																					elseif (v147 <= (2024 - (1789 + 124))) then
																						if (v147 <= 103) then
																							if (v147 <= (865 - (745 + 21))) then
																								if (v147 <= 97) then
																									if (v147 == 96) then
																										v144[v146[2]][v146[3]] = v144[v146[4]];
																									else
																										v138 = v146[3];
																									end
																								elseif (v147 == 98) then
																									if (v146[2] == v144[v146[4]]) then
																										v138 = v138 + 1 + 0;
																									else
																										v138 = v146[3];
																									end
																								elseif (v146[2] < v144[v146[4]]) then
																									v138 = v138 + (2 - 1);
																								else
																									v138 = v146[3];
																								end
																							elseif (v147 <= 101) then
																								if (v147 == 100) then
																									local v367 = 0;
																									local v368;
																									local v369;
																									while true do
																										if (v367 == 1) then
																											for v504 = v368 + 1, v139 do
																												v15(v369, v144[v504]);
																											end
																											break;
																										end
																										if (v367 == 0) then
																											v368 = v146[2];
																											v369 = v144[v368];
																											v367 = 1;
																										end
																									end
																								else
																									local v370 = 0;
																									local v371;
																									local v372;
																									while true do
																										if (v370 == 0) then
																											v371 = 0;
																											v372 = nil;
																											v370 = 1;
																										end
																										if (v370 == 1) then
																											while true do
																												if (v371 == 0) then
																													v372 = v146[2];
																													do
																														return v144[v372](v21(v144, v372 + 1, v146[3]));
																													end
																													break;
																												end
																											end
																											break;
																										end
																									end
																								end
																							elseif (v147 > 102) then
																								if v144[v146[2]] then
																									v138 = v138 + (3 - 2);
																								else
																									v138 = v146[3];
																								end
																							else
																								v144[v146[2]] = {};
																							end
																						elseif (v147 <= 107) then
																							if (v147 <= 105) then
																								if (v147 == 104) then
																									if not v144[v146[2]] then
																										v138 = v138 + 1;
																									else
																										v138 = v146[3];
																									end
																								else
																									v144[v146[2]] = v144[v146[3]] / v146[4];
																								end
																							elseif (v147 > 106) then
																								v144[v146[2]] = v144[v146[3]] - v144[v146[4]];
																							elseif (v144[v146[2]] == v144[v146[1 + 3]]) then
																								v138 = v138 + 1 + 0;
																							else
																								v138 = v146[3];
																							end
																						elseif (v147 <= 109) then
																							if (v147 > (1163 - (87 + 968))) then
																								v144[v146[2]] = v144[v146[3]] * v144[v146[4]];
																							else
																								local v377 = 0;
																								local v378;
																								local v379;
																								local v380;
																								local v381;
																								local v382;
																								while true do
																									if (v377 == 1) then
																										v380 = nil;
																										v381 = nil;
																										v377 = 2;
																									end
																									if (v377 == 2) then
																										v382 = nil;
																										while true do
																											if (v378 == 1) then
																												local v545 = 0;
																												while true do
																													if (v545 == 1) then
																														v378 = 2;
																														break;
																													end
																													if (0 == v545) then
																														v139 = (v381 + v379) - 1;
																														v382 = 0;
																														v545 = 1;
																													end
																												end
																											end
																											if (v378 == 0) then
																												local v546 = 0;
																												while true do
																													if (v546 == 1) then
																														v378 = 1;
																														break;
																													end
																													if (v546 == 0) then
																														v379 = v146[2];
																														v380, v381 = v137(v144[v379](v21(v144, v379 + 1, v146[3])));
																														v546 = 1;
																													end
																												end
																											end
																											if (v378 == 2) then
																												for v589 = v379, v139 do
																													local v590 = 0;
																													local v591;
																													while true do
																														if (v590 == 0) then
																															v591 = 0;
																															while true do
																																if (v591 == 0) then
																																	v382 = v382 + 1;
																																	v144[v589] = v380[v382];
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																										break;
																									end
																									if (v377 == 0) then
																										v378 = 0;
																										v379 = nil;
																										v377 = 1;
																									end
																								end
																							end
																						elseif (v147 == 110) then
																							if (v144[v146[2]] == v146[4]) then
																								v138 = v138 + 1;
																							else
																								v138 = v146[3];
																							end
																						elseif v144[v146[2]] then
																							v138 = v138 + 1;
																						else
																							v138 = v146[3];
																						end
																					elseif (v147 <= 119) then
																						if (v147 <= 115) then
																							if (v147 <= 113) then
																								if (v147 == 112) then
																									local v383 = 0;
																									local v384;
																									while true do
																										if (v383 == 0) then
																											v384 = v146[8 - 6];
																											v139 = (v384 + v145) - 1;
																											v383 = 1;
																										end
																										if (1 == v383) then
																											for v505 = v384, v139 do
																												local v506 = 0;
																												local v507;
																												local v508;
																												while true do
																													if (v506 == 0) then
																														v507 = 0;
																														v508 = nil;
																														v506 = 1;
																													end
																													if (v506 == 1) then
																														while true do
																															if (v507 == 0) then
																																v508 = v140[v505 - v384];
																																v144[v505] = v508;
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																								else
																									local v385 = 0;
																									local v386;
																									local v387;
																									local v388;
																									while true do
																										if (v385 == 1) then
																											v388 = nil;
																											while true do
																												if (v386 == 1) then
																													for v592 = 1, #v143 do
																														local v593 = 0;
																														local v594;
																														while true do
																															if (v593 == 0) then
																																v594 = v143[v592];
																																for v648 = 0, #v594 do
																																	local v649 = 0;
																																	local v650;
																																	local v651;
																																	local v652;
																																	while true do
																																		if (v649 == 0) then
																																			v650 = v594[v648];
																																			v651 = v650[1];
																																			v649 = 1;
																																		end
																																		if (v649 == 1) then
																																			v652 = v650[2];
																																			if ((v651 == v144) and (v652 >= v387)) then
																																				local v685 = 0;
																																				while true do
																																					if (v685 == 0) then
																																						v388[v652] = v651[v652];
																																						v650[1] = v388;
																																						break;
																																					end
																																				end
																																			end
																																			break;
																																		end
																																	end
																																end
																																break;
																															end
																														end
																													end
																													break;
																												end
																												if (v386 == 0) then
																													local v547 = 0;
																													while true do
																														if (v547 == 1) then
																															v386 = 1;
																															break;
																														end
																														if (v547 == 0) then
																															v387 = v146[2];
																															v388 = {};
																															v547 = 1;
																														end
																													end
																												end
																											end
																											break;
																										end
																										if (0 == v385) then
																											v386 = 0;
																											v387 = nil;
																											v385 = 1;
																										end
																									end
																								end
																							elseif (v147 == 114) then
																								local v389 = 0;
																								local v390;
																								local v391;
																								while true do
																									if (v389 == 0) then
																										v390 = 0;
																										v391 = nil;
																										v389 = 1;
																									end
																									if (v389 == 1) then
																										while true do
																											if (v390 == 0) then
																												v391 = v146[2];
																												v144[v391] = v144[v391]();
																												break;
																											end
																										end
																										break;
																									end
																								end
																							else
																								v144[v146[2]] = v144[v146[3]] % v144[v146[4]];
																							end
																						elseif (v147 <= 117) then
																							if (v147 > 116) then
																								do
																									return;
																								end
																							else
																								v144[v146[2]][v144[v146[3]]] = v146[4 + 0];
																							end
																						elseif (v147 == 118) then
																							v144[v146[4 - 2]] = v144[v146[3]][v144[v146[4]]];
																						else
																							v144[v146[2]] = v144[v146[1416 - (447 + 966)]] + v146[4];
																						end
																					elseif (v147 <= 123) then
																						if (v147 <= 121) then
																							if (v147 > 120) then
																								local v398 = 0;
																								local v399;
																								local v400;
																								while true do
																									if (v398 == 0) then
																										v399 = 0;
																										v400 = nil;
																										v398 = 1;
																									end
																									if (v398 == 1) then
																										while true do
																											if (v399 == 0) then
																												v400 = v146[2];
																												v144[v400] = v144[v400](v144[v400 + 1]);
																												break;
																											end
																										end
																										break;
																									end
																								end
																							else
																								v144[v146[2]] = v146[3] ~= 0;
																							end
																						elseif (v147 == (333 - 211)) then
																							local v402 = 0;
																							local v403;
																							local v404;
																							while true do
																								if (v402 == 1) then
																									for v509 = 1, #v143 do
																										local v510 = 0;
																										local v511;
																										while true do
																											if (v510 == 0) then
																												v511 = v143[v509];
																												for v596 = 0, #v511 do
																													local v597 = 0;
																													local v598;
																													local v599;
																													local v600;
																													local v601;
																													while true do
																														if (v597 == 0) then
																															v598 = 0;
																															v599 = nil;
																															v597 = 1;
																														end
																														if (v597 == 1) then
																															v600 = nil;
																															v601 = nil;
																															v597 = 2;
																														end
																														if (v597 == 2) then
																															while true do
																																if (v598 == 0) then
																																	local v676 = 0;
																																	while true do
																																		if (v676 == 1) then
																																			v598 = 1;
																																			break;
																																		end
																																		if (v676 == 0) then
																																			v599 = v511[v596];
																																			v600 = v599[1];
																																			v676 = 1;
																																		end
																																	end
																																end
																																if (v598 == 1) then
																																	v601 = v599[2];
																																	if ((v600 == v144) and (v601 >= v403)) then
																																		local v686 = 0;
																																		while true do
																																			if (v686 == 0) then
																																				v404[v601] = v600[v601];
																																				v599[1] = v404;
																																				break;
																																			end
																																		end
																																	end
																																	break;
																																end
																															end
																															break;
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																									break;
																								end
																								if (0 == v402) then
																									v403 = v146[1819 - (1703 + 114)];
																									v404 = {};
																									v402 = 1;
																								end
																							end
																						else
																							local v405 = 0;
																							local v406;
																							local v407;
																							while true do
																								if (v405 == 1) then
																									while true do
																										if (v406 == 0) then
																											v407 = v144[v146[4]];
																											if not v407 then
																												v138 = v138 + 1;
																											else
																												local v602 = 0;
																												local v603;
																												while true do
																													if (v602 == 0) then
																														v603 = 0;
																														while true do
																															if (v603 == 0) then
																																v144[v146[2]] = v407;
																																v138 = v146[3];
																																break;
																															end
																														end
																														break;
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																								if (v405 == 0) then
																									v406 = 0;
																									v407 = nil;
																									v405 = 1;
																								end
																							end
																						end
																					elseif (v147 <= 125) then
																						if (v147 == (825 - (376 + 325))) then
																							v69[v146[3]] = v144[v146[2]];
																						else
																							v144[v146[2]] = v144[v146[3]][v146[4]];
																						end
																					elseif (v147 > (206 - 80)) then
																						local v412 = 0;
																						local v413;
																						while true do
																							if (v412 == 0) then
																								v413 = v146[2];
																								do
																									return v144[v413](v21(v144, v413 + 1, v139));
																								end
																								break;
																							end
																						end
																					else
																						v144[v146[5 - 3]] = v144[v146[3]] % v146[2 + 2];
																					end
																					v138 = v138 + 1;
																					break;
																				end
																				if (0 == v150) then
																					local v161 = 0;
																					while true do
																						if (v161 == 0) then
																							v146 = v134[v138];
																							v147 = v146[1];
																							v161 = 1;
																						end
																						if (v161 == 1) then
																							v150 = 1;
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
															if (v133 == 1) then
																v138 = 1;
																v139 = -1;
																v140 = {};
																v141 = {...};
																v133 = 2;
															end
															if (v133 == 2) then
																v142 = v20("#", ...) - 1;
																v143 = {};
																v144 = {};
																for v151 = 0, v142 do
																	if (v151 >= v136) then
																		v140[v151 - v136] = v141[v151 + 1];
																	else
																		v144[v151] = v141[v151 + (1271 - (226 + 1044))];
																	end
																end
																v133 = 3;
															end
														end
													end;
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
					end
				end
				return v42(v41(), {}, v29)(...);
			end
			if (2 == v30) then
				function v35()
					local v76 = 0;
					local v77;
					local v78;
					local v79;
					while true do
						if (v76 == 1) then
							v79 = nil;
							while true do
								local v102 = 0;
								while true do
									if (0 == v102) then
										if (v77 == 1) then
											return (v79 * 256) + v78;
										end
										if (v77 == 0) then
											local v116 = 0;
											while true do
												if (v116 == 1) then
													v77 = 1;
													break;
												end
												if (0 == v116) then
													v78, v79 = v9(v28, v31, v31 + 2);
													v31 = v31 + 2;
													v116 = 1;
												end
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v76 == 0) then
							v77 = 0;
							v78 = nil;
							v76 = 1;
						end
					end
				end
				v36 = nil;
				function v36()
					local v80 = 0;
					local v81;
					local v82;
					local v83;
					local v84;
					local v85;
					while true do
						if (v80 == 0) then
							v81 = 0;
							v82 = nil;
							v80 = 1;
						end
						if (v80 == 2) then
							v85 = nil;
							while true do
								local v103 = 0;
								while true do
									if (0 == v103) then
										if (v81 == 0) then
											local v117 = 0;
											while true do
												if (1 == v117) then
													v81 = 1;
													break;
												end
												if (v117 == 0) then
													v82, v83, v84, v85 = v9(v28, v31, v31 + 3);
													v31 = v31 + 4;
													v117 = 1;
												end
											end
										end
										if (v81 == 1) then
											return (v85 * 16777216) + (v84 * 65536) + (v83 * 256) + v82;
										end
										break;
									end
								end
							end
							break;
						end
						if (v80 == 1) then
							v83 = nil;
							v84 = nil;
							v80 = 2;
						end
					end
				end
				v37 = nil;
				v30 = 3;
			end
			if (v30 == 0) then
				v31 = 1;
				v32 = nil;
				v28 = v12(v11(v28, 5), v7("\12\175", "\34\129\168\82\154\143\80\156"), function(v86)
					if (v9(v86, 2) == (246 - 167)) then
						local v93 = 0;
						local v94;
						while true do
							if (v93 == 0) then
								v94 = 0;
								while true do
									if (v94 == 0) then
										local v109 = 0;
										while true do
											if (v109 == 0) then
												v32 = v8(v11(v86, 1, 1));
												return "";
											end
										end
									end
								end
								break;
							end
						end
					else
						local v95 = 0;
						local v96;
						local v97;
						while true do
							if (1 == v95) then
								while true do
									if (0 == v96) then
										v97 = v10(v8(v86, 16));
										if v32 then
											local v118 = 0;
											local v119;
											while true do
												if (v118 == 1) then
													return v119;
												end
												if (v118 == 0) then
													v119 = v13(v97, v32);
													v32 = nil;
													v118 = 1;
												end
											end
										else
											return v97;
										end
										break;
									end
								end
								break;
							end
							if (v95 == 0) then
								v96 = 0;
								v97 = nil;
								v95 = 1;
							end
						end
					end
				end);
				v33 = nil;
				v30 = 1;
			end
		end
	end
	vv17(), ...);
end
